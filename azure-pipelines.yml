# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- staging
- trying

strategy:
  matrix:
    windows-stable:
      imageName: 'vs2017-win2016'
      rustup_toolchain: stable
    mac-stable:
      imageName: 'macos-10.14'
      rustup_toolchain: stable
    linux-stable:
      imageName: 'ubuntu-16.04'
      rustup_toolchain: stable

pool:
  vmImage: $(imageName)

steps:
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install rust
    condition: ne( variables['Agent.OS'], 'Windows_NT' )
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Windows install rust
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - script: cargo build --all
    displayName: Cargo build
  - script: cargo test --all
    displayName: Cargo test
  - task: CopyFiles@2
    displayName: Copy assets
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)/target/$(TARGET)/release'
      contents: |
        mdformat
      targetFolder: '$(Build.BinariesDirectory)'
  - task: ArchiveFiles@2
    displayName: Gather assets
    inputs:
      rootFolderOrFile: '$(Build.BinariesDirectory)/mdformat'
      archiveType: 'tar'
      tarCompression: 'gz'
      archiveFile: '$(Build.ArtifactStagingDirectory)/mdformat-$(TARGET).tar.gz'
  - task: GithubRelease@0
    displayName: 'Create Github release'
    inputs:
      githubConnection: afnanenayetgh
      repositoryName: afnanenayet/mdformat
      action: 'edit'
      tagSource: auto
      compareWith: 'lastFullRelease'
      addChangeLog: true
      assets: '$(Build.ArtifactStagingDirectory)/mdformat-$(TARGET)'
      assetUploadMode: 'replace'
